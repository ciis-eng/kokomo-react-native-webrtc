# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

orbs:
  slack: circleci/slack@2.5.0
  android: circleci/android@2.1.2
  github-cli: circleci/github-cli@1.0.4

jobs:
  dis-update-package:
    description: Update package.json file w/tag name
    machine: # executor type
      image: ubuntu-2004:202010-01 # recommended linux 
    resource_class: small      
    steps:
      - checkout
      - run:
          name: Update package.json with CIRCLE_TAG
          command: python3 tools/build-add-tagname.py $CIRCLE_TAG
      # - run: 
      #     name: Determine commit ID & build branch then commit & push to repo
      #     # determine branch from tag using commit ID. 
      #     # Note: "git branch -a --contains <tag>" could return multiple entries
      #     #       however, since the pipeline runs right after the tag is comminted
      #     #       this should not become an issue
      #     command: COMMIT=$(git show-ref ${CIRCLE_TAG} | awk '{print $1}') 
      #              && TMP=$(git branch -a --contains $COMMIT) 
      #              && export BRANCH="${TMP##*/}" 
      #              && echo "Building branch $BRANCH"
      #              && git config user.name "CircleCI WebRTC Builder"
      #              && git config user.email cloud-ops@cusa.canon.com
      #              && git checkout $BRANCH
      #              && git add package.json
      #              && git commit -m "updated library file URLs"
      #              && git push
  dis-android-build:
    description: android build for DIS
    executor:
      name: android/android-machine
      resource-class: large
      tag: 2022.09.1
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
      # PACKAGE_BUILD_KEYCHAIN: circle.keychain
      shell: /bin/bash --login -eo pipefail
    parameters:
      tag-or-branch:
        type: env_var_name
        default: BRANCH      
    steps:
      - checkout
      - github-cli/setup      
      # - run:
      #     name: install node 16.18.0
      #     command: nvm install 16.18.0
      - run: 
          name: Determine commit ID & build branch
          # determine branch from tag using commit ID. 
          # Note: "git branch -a --contains <tag>" could return multiple entries
          #       however, since the pipeline runs right after the tag is comminted
          #       this should not become an issue
          command: COMMIT=$(git show-ref ${CIRCLE_TAG} | awk '{print $1}') 
                   && TMP=$(git branch -a --contains $COMMIT) 
                   && export BRANCH="${TMP##*/}" 
                   && echo "Building branch $BRANCH"
      - run:
          name: "Build Android version of WebRTC"
          command: "./tools/build-jitsi-webrtc.sh android"
      - run:
          name: display library file
          command: ls ~/srcjitsi/build_webrtc/build/android
  dis-ios-build:
    description: IOS build for DIS
    macos:
      xcode: 14.2.0 # Specify the Xcode version to use
      # xcode: 12.5.1
    # resource_class: macos.m1.medium.gen1
    resource_class: macos.x86.medium.gen2    
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
      # PACKAGE_BUILD_KEYCHAIN: circle.keychain
      shell: /bin/bash --login -eo pipefail
    parameters:
      tag-or-branch:
        type: env_var_name
        default: BRANCH          
    steps:
      - checkout
      - github-cli/setup      
      # - run:
      #     name: install node 16.18.0
      #     command: nvm install 16.18.0
      - run: 
          name: Determine commit ID & build branch
          # determine branch from tag using commit ID. 
          # Note: "git branch -a --contains <tag>" could return multiple entries
          #       however, since the pipeline runs right after the tag is comminted
          #       this should not become an issue
          command: COMMIT=$(git show-ref ${CIRCLE_TAG} | awk '{print $1}') 
                   && TMP=$(git branch -a --contains $COMMIT) 
                   && export BRANCH="${TMP##*/}" 
                   && echo "Building branch $BRANCH"
      - run:
          name: "Build IOS version of WebRTC"
          command: "./tools/build-jitsi-webrtc.sh ios"
      - run:
          name: display library file
          command: ls ~/srcjitsi/build_webrtc/build/ios
workflows:
  build-release:
    jobs:
      - dis-update-package
          # context: kokomo-webrtc
          # filters:
          #   tags:
          #     only: /release-[0-9]+.[0-9]+.[0-9]+.[0-9]+(-rc\.[0-9]+)?/
          #   branches:
          #     ignore: /.*/         
      # - dis-android-build:
      #     context: kokomo-webrtc
      #     filters:
      #       tags:
      #         only: /release-[0-9]+.[0-9]+.[0-9]+.[0-9]+(-rc\.[0-9]+)?/
      #       branches:
      #         ignore: /.*/        
      # - dis-ios-build:
      #     context: kokomo-webrtc
      #     filters:
      #       tags:
      #         only: /release-[0-9]+.[0-9]+.[0-9]+.[0-9]+(-rc\.[0-9]+)?/ 
      #       branches:
      #         ignore: /.*/          